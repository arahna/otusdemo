openapi: 3.0.0
info:
  title: User Service
  description: |
    This is simple client API
  contact:
    email: julia.matveeva@gmail.com
  version: 1.0.0
servers:
  - url: http://arch.homework/otusapp/api/v1/
    description: Demo User API
tags:
  - name: user
    description: Operations about user
paths:
  /users:
    post:
      tags:
        - user
      summary: Create a user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              sample-user:
                summary: Example
                value:
                  username: johndoe589
                  firstName: John
                  lastName: Doe
                  email: bestjohn@doe.com
                  phone: +71002003040
        required: true
      responses:
        "200":
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "409":
          description: duplicate username or email
    get:
      tags:
        - user
      summary: List users
      description: Returns a user list
      operationId: list users
      responses:
        "200":
          description: user list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    get:
      tags:
        - user
      summary: Find a user by id
      description: Returns a user based on a single ID, if the user does not have
        access to the user
      operationId: find user by id
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - user
      summary: Update a user by id
      description: Update user with User ID supplied
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              sample-user:
                summary: Example
                value:
                  firstName: Julie
                  lastName: Doe
                  email: bestjohn@doe.com
                  phone: +71004242424
      responses:
        "200":
          description: user updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - user
      summary: Delete a user by id
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: user deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          maxLength: 36
        username:
          maxLength: 256
          type: string
        firstName:
          type: string
          maxLength: 256
        lastName:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          maxLength: 256
        phone:
          type: string
          format: phone
          maxLength: 256
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string